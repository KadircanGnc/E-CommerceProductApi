
@inject CartService CartService
@inject IJSRuntime JS
@inject NavigationManager Navigation

<!-- Humberger Begin -->
<div class="humberger__menu__overlay"></div>
<div class="humberger__menu__wrapper">
    <div class="humberger__menu__logo">
        <a href="/"><img src="images/logo.png" alt=""></a>
    </div>
    <div class="humberger__menu__cart">
        <ul>
            <li><a href="#"><i class="fa fa-heart"></i> <span>1</span></a></li>
            <li><a href="#"><i class="fa fa-shopping-bag"></i> <span>3</span></a></li>
        </ul>
        <div class="header__cart__price">item: <span>TRY 150.00</span></div>
        <div class="header__top__right__auth">
            <a href="#"><i class="fa fa-user"></i> Login</a>
        </div>
    </div>
    <div class="humberger__menu__widget">
        <div class="header__top__right__language">
            <img src="images/language.png" alt="">
            <div>English</div>
            <span class="arrow_carrot-down"></span>
            <ul>
                <li><a href="#">Spanis</a></li>
                <li><a href="#">English</a></li>
            </ul>
        </div>
        <div class="header__top__right__auth">
            <a href="#"><i class="fa fa-user"></i> Login</a>
        </div>
    </div>
    <nav class="humberger__menu__nav mobile-menu">
        <ul>
            <li class="active"><a href="./index.html">Home</a></li>
            <li><a href="./shop-grid.html">Shop</a></li>
            <li>
                <a href="#">Pages</a>
                <ul class="header__menu__dropdown">
                    <li><a href="./shop-details.html">Shop Details</a></li>
                    <li><a href="./shoping-cart.html">Shoping Cart</a></li>
                    <li><a href="./checkout.html">Check Out</a></li>
                    <li><a href="./blog-details.html">Blog Details</a></li>
                </ul>
            </li>
            <li><a href="./blog.html">Blog</a></li>
            <li><a href="./contact.html">Contact</a></li>
        </ul>
    </nav>
    <div id="mobile-menu-wrap"></div>
    <div class="header__top__right__social">
        <a href="#"><i class="fa fa-facebook"></i></a>
        <a href="#"><i class="fa fa-twitter"></i></a>
        <a href="#"><i class="fa fa-linkedin"></i></a>
        <a href="#"><i class="fa fa-pinterest-p"></i></a>
    </div>
    <div class="humberger__menu__contact">
        <ul>
            <li><i class="fa fa-envelope"></i> hello@colorlib.com</li>
            <li>Free Shipping for all Order of $99</li>
        </ul>
    </div>
</div>
<!-- Humberger End -->
<!-- Header Section Begin -->
<header class="header">
    
    <div class="container">
        <div class="row">
            <div class="col-lg-3 ">
                <div class="header__logo">
                    <a href="/"><img src="images/logo.png" alt=""></a>
                </div>
            </div>
           
            <div class="col-lg-3 offset-lg-6">
                <div class="header__cart">                    
                    <ul>                        
                        <li><a href="/Cart"><i class="fa fa-shopping-bag"></i> <span>@cartItemCount</span></a></li>
                    </ul>                    
                    <div class="header__top__right__auth">
                        @if (isLoggedIn)
                        {
                            <span>Welcome, user (@userEmail)</span>
                            <a href="/logout" @onclick="Logout"><i class="fa fa-sign-out"></i> Logout</a>
                        }
                        else
                        {
                            <a href="/login"><i class="fa fa-user"></i> Login</a>
                        }                        
                    </div>
                </div>
            </div>
        </div>
        <div class="humberger__open">
            <i class="fa fa-bars"></i>
        </div>
    </div>
</header>
<!-- Header Section End -->

@code {
    private bool isLoggedIn = false;
    private string userName = "";
    private string userEmail = "";
    private string token = "";
    private int cartItemCount;
    // string token = "";
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {            
            token = await JS.InvokeAsync<string>("sessionStorage.getItem", "authToken");
            userEmail = await JS.InvokeAsync<string>("sessionStorage.getItem", "email");


            var countStr = await JS.InvokeAsync<string>("sessionStorage.getItem", "cartItemCount");
            cartItemCount = Convert.ToInt16(countStr);


            isLoggedIn = !string.IsNullOrEmpty(token);
            StateHasChanged();
        }
    }
    
    protected override async Task OnInitializedAsync()
    {
        
        // userName = await JS.InvokeAsync<string>("sessionStorage.getItem", "userName");
        // userEmail = await JS.InvokeAsync<string>("sessionStorage.getItem", "userEmail");
        // var token = await JS.InvokeAsync<string>("sessionStorage.getItem", "authToken");

        // cartItemCount = await JS.InvokeAsync<int>("sessionStorage.getItem", "cartItemCount");
        // isLoggedIn = !string.IsNullOrEmpty(token);

        

        StateHasChanged();
        if (isLoggedIn)
        {
            await UpdateCartItemCount();
        }
        
    }

    private async Task Logout()
    {
        await JS.InvokeVoidAsync("sessionStorage.removeItem", "authToken");        
        await JS.InvokeVoidAsync("sessionStorage.removeItem", "cartItemCount");
        Navigation.NavigateTo("/login");
    }

    private async Task UpdateCartItemCount()
    {
        if (isLoggedIn)
        {
            cartItemCount = await CartService.GetItemCountAsync(token);
        }
        
    }

    // Call this method after adding/removing items to refresh the cart item count
    public async Task RefreshCartItemCount()
    {
        if (isLoggedIn)
        {
            await UpdateCartItemCount();
        }        
    }

    // private async Task<string> GetAuthToken()
    // {
    //     token = await JS.InvokeAsync<string>("sessionStorage.getItem", "authToken");
    //     return token;
    // }
}
